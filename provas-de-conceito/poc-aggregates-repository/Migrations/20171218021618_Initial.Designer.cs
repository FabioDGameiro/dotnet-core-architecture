// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using poc_aggregates_repository.Data;
using System;

namespace pocaggregatesrepository.Migrations
{
    [DbContext(typeof(UsersContext))]
    [Migration("20171218021618_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("poc_aggregates_repository.Data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("poc_aggregates_repository.Data.UserEmail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UsersEmails");
                });

            modelBuilder.Entity("poc_aggregates_repository.Data.UserEmail", b =>
                {
                    b.HasOne("poc_aggregates_repository.Data.User", "User")
                        .WithMany("Emails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("poc_aggregates_repository.Data.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserEmailId");

                            b1.Property<string>("Address");

                            b1.ToTable("UsersEmails");

                            b1.HasOne("poc_aggregates_repository.Data.UserEmail")
                                .WithOne("Email")
                                .HasForeignKey("poc_aggregates_repository.Data.Email", "UserEmailId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
